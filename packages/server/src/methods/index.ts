import type { RpcMethodHandler } from "../types";

// Account methods are now in a subdirectory for better organization
import {
	getAccountInfo,
	getBalance,
	getMultipleAccounts,
	getParsedAccountInfo,
	requestAirdrop,
} from "./account";
import {
	solforgeAdminCloneProgram,
	solforgeAdminCloneProgramAccounts,
	solforgeAdminCloneTokenAccounts,
	solforgeAdminCloneTokenMint,
	solforgeAdoptMintAuthority,
	solforgeCreateMint,
	solforgeCreateTokenAccount,
	solforgeListMints,
	solforgeLoadProgram,
	solforgeMintTo,
} from "./admin";

import {
	getBlock,
	getBlockHeight,
	getBlocksWithLimit,
	getLatestBlockhash,
	getSlot,
	isBlockhashValid,
} from "./block";
import {
	getClusterNodes,
	getEpochInfo,
	getEpochSchedule,
	getHighestSnapshotSlot,
	getLeaderSchedule,
	getMaxRetransmitSlot,
	getMaxShredInsertSlot,
	getSlotLeader,
	getSlotLeaders,
	getStakeActivation,
	getStakeMinimumDelegation,
	getVoteAccounts,
	minimumLedgerSlot,
} from "./epoch";
import {
	getFeeCalculatorForBlockhash,
	getFeeForMessage,
	getFeeRateGovernor,
	getFees,
	getRecentPrioritizationFees,
} from "./fee";
import { getAddressLookupTable } from "./get-address-lookup-table";
import {
	getRecentPerformanceSamples,
	getTransactionCount,
} from "./performance";
import {
	getBlockCommitment,
	getBlockProduction,
	getBlocks,
	getBlockTime,
	getFirstAvailableBlock,
	getGenesisHash,
	getIdentity,
	getInflationGovernor,
	getInflationRate,
	getInflationReward,
	getLargestAccounts,
	getParsedProgramAccounts,
	getParsedTokenAccountsByDelegate,
	getParsedTokenAccountsByOwner,
	getProgramAccounts,
	getSupply,
	getTokenAccountBalance,
	getTokenAccountsByDelegate,
	getTokenAccountsByOwner,
	getTokenLargestAccounts,
	getTokenSupply,
} from "./program";
import {
	solforgeGetStatus,
	solforgeListPrograms,
	solforgeListTokensDetailed,
	solforgeListTransactions,
} from "./solforge";
import {
	getHealth,
	getMinimumBalanceForRentExemption,
	getVersion,
} from "./system";
import {
	getConfirmedTransaction,
	getParsedTransaction,
	getSignatureStatuses,
	getSignaturesForAddress,
	getTransaction,
	sendTransaction,
	simulateTransaction,
} from "./transaction";

export const rpcMethods: Record<string, RpcMethodHandler> = {
	// Account methods
	getAccountInfo,
	getBalance,
	getMultipleAccounts,
	requestAirdrop,
	getParsedAccountInfo,

	// Transaction methods
	sendTransaction,
	simulateTransaction,
	getTransaction,
	getParsedTransaction,
	getSignatureStatuses,
	getSignaturesForAddress,
	getConfirmedTransaction,

	// Block methods
	getLatestBlockhash,
	getSlot,
	getBlockHeight,
	isBlockhashValid,
	getBlock,
	getBlocksWithLimit,

	// System methods
	getMinimumBalanceForRentExemption,
	getHealth,
	getVersion,
	// Program/network info methods
	getBlockTime,
	getBlocks,
	getFirstAvailableBlock,
	getGenesisHash,
	getIdentity,
	getInflationGovernor,
	getInflationRate,
	getInflationReward,
	getSupply,
	getBlockProduction,
	getParsedProgramAccounts,
	getProgramAccounts,
	getTokenAccountBalance,
	getTokenAccountsByOwner,
	getTokenAccountsByDelegate,
	getParsedTokenAccountsByOwner,
	getParsedTokenAccountsByDelegate,
	getTokenLargestAccounts,
	getTokenSupply,
	getBlockCommitment,
	getLargestAccounts,

	// Epoch/cluster methods
	getEpochSchedule,
	getEpochInfo,
	getLeaderSchedule,
	getSlotLeader,
	getSlotLeaders,
	getVoteAccounts,
	getClusterNodes,
	getStakeActivation,
	getMaxRetransmitSlot,
	getHighestSnapshotSlot,
	minimumLedgerSlot,
	getStakeMinimumDelegation,
	getMaxShredInsertSlot,
	// Performance metrics
	getRecentPerformanceSamples,
	getTransactionCount,
	getAddressLookupTable,

	// Fee methods
	getRecentPrioritizationFees,
	getFeeForMessage,
	getFees,
	getFeeCalculatorForBlockhash,
	getFeeRateGovernor,

	// Solforge helpers
	solforgeGetStatus,
	solforgeListPrograms,
	solforgeListTokensDetailed,
	solforgeListTransactions,
};

// Admin methods (gated by SOLFORGE_ADMIN=1)
export const adminMethods: Record<string, RpcMethodHandler> = {
	solforgeAdminCloneProgram,
	solforgeAdminCloneProgramAccounts,
	solforgeAdminCloneTokenMint,
	solforgeAdminCloneTokenAccounts,
	solforgeCreateTokenAccount,
	solforgeLoadProgram,
	solforgeCreateMint,
	solforgeListMints,
	solforgeMintTo,
	solforgeAdoptMintAuthority,
};

Object.assign(rpcMethods, adminMethods);

export {
	getAccountInfo,
	getBalance,
	getMultipleAccounts,
	requestAirdrop,
	sendTransaction,
	simulateTransaction,
	getTransaction,
	getSignatureStatuses,
	getSignaturesForAddress,
	getConfirmedTransaction,
	getLatestBlockhash,
	getSlot,
	getBlockHeight,
	isBlockhashValid,
	getBlock,
	getBlocksWithLimit,
	getMinimumBalanceForRentExemption,
	getHealth,
	getVersion,
	getBlockTime,
	getBlocks,
	getFirstAvailableBlock,
	getGenesisHash,
	getIdentity,
	getInflationGovernor,
	getInflationRate,
	getInflationReward,
	getSupply,
	getBlockProduction,
	getParsedProgramAccounts,
	getProgramAccounts,
	getTokenAccountBalance,
	getTokenAccountsByOwner,
	getTokenAccountsByDelegate,
	getTokenLargestAccounts,
	getTokenSupply,
	getBlockCommitment,
	getLargestAccounts,
	getEpochSchedule,
	getEpochInfo,
	getLeaderSchedule,
	getSlotLeader,
	getSlotLeaders,
	getVoteAccounts,
	getClusterNodes,
	getStakeActivation,
	getMaxRetransmitSlot,
	getHighestSnapshotSlot,
	minimumLedgerSlot,
	getStakeMinimumDelegation,
	getMaxShredInsertSlot,
	getRecentPerformanceSamples,
	getTransactionCount,
	getAddressLookupTable,
	solforgeGetStatus,
	solforgeListPrograms,
	solforgeListTokensDetailed,
	getRecentPrioritizationFees,
	getFeeForMessage,
	getFees,
	getFeeCalculatorForBlockhash,
	getFeeRateGovernor,
};
